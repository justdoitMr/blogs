"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[427],{6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,o]of t)r[e]=o;return r}},2192:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>c,data:()=>i});var o=r(641);const n=[(0,o.Lk)("h1",{id:"四、提问-如何避免频繁的微服务调用",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#四、提问-如何避免频繁的微服务调用"},[(0,o.Lk)("span",null,"四、提问：如何避免频繁的微服务调用？")])],-1),(0,o.Lk)("p",null,"一个微服务方面的设计问题，是社交场景现在想渲染评论列表，每一个评论中有用户头像和昵称，但是评论表中只有用户 ID，每次获取评论列表时，需要 RPC 调用用户服务，获取对应的头像和昵称。我现在的解决方法有两个：一个是添加用户基本信息缓存，另外一个是在评论表中设置用户信息冗余字段（用户更改个人信息的时候很麻烦）。请问有没有别的解决方案呀？",-1),(0,o.Lk)("p",null,"答：两种方式都各有优缺点，在评论表中增加冗余信息相当于以空间换取时间的策略，不会频繁的进行rpc调用，因此效率比较高。增加基本信息缓存映射，需要定时去维护缓存中的用户信息，间接增大服务的开销，但是也是一种不错的思路。",-1)],a={},c=(0,r(6262).A)(a,[["render",function(e,t){return(0,o.uX)(),(0,o.CE)("div",null,n)}]]),i=JSON.parse('{"path":"/interview/Scenequestion/act_four_Frequent_calls.html","title":"四、提问：如何避免频繁的微服务调用？","lang":"zh-CN","frontmatter":{"icon":"file","order":4,"author":"bugcode","date":"2020-01-01T00:00:00.000Z","category":["面试"],"tag":["面试","场景"],"sticky":false,"star":true,"footer":"分布式","copyright":"bugcode","description":"四、提问：如何避免频繁的微服务调用？ 一个微服务方面的设计问题，是社交场景现在想渲染评论列表，每一个评论中有用户头像和昵称，但是评论表中只有用户 ID，每次获取评论列表时，需要 RPC 调用用户服务，获取对应的头像和昵称。我现在的解决方法有两个：一个是添加用户基本信息缓存，另外一个是在评论表中设置用户信息冗余字段（用户更改个人信息的时候很麻烦）。请问有...","head":[["meta",{"property":"og:url","content":"https://www.bugcode.online/interview/Scenequestion/act_four_Frequent_calls.html"}],["meta",{"property":"og:site_name","content":"bugcode 的架构之路"}],["meta",{"property":"og:title","content":"四、提问：如何避免频繁的微服务调用？"}],["meta",{"property":"og:description","content":"四、提问：如何避免频繁的微服务调用？ 一个微服务方面的设计问题，是社交场景现在想渲染评论列表，每一个评论中有用户头像和昵称，但是评论表中只有用户 ID，每次获取评论列表时，需要 RPC 调用用户服务，获取对应的头像和昵称。我现在的解决方法有两个：一个是添加用户基本信息缓存，另外一个是在评论表中设置用户信息冗余字段（用户更改个人信息的时候很麻烦）。请问有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-23T07:40:31.000Z"}],["meta",{"property":"article:author","content":"bugcode"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"场景"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-23T07:40:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"四、提问：如何避免频繁的微服务调用？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-23T07:40:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bugcode\\"}]}"]]},"headers":[],"git":{"createdTime":1729669231000,"updatedTime":1729669231000,"contributors":[{"name":"不爱打代码的程序员","email":"2284609302@qq.com","commits":1}]},"readingTime":{"minutes":1.32,"words":397},"filePathRelative":"interview/Scenequestion/act_four_Frequent_calls.md","localizedDate":"2020年1月1日","excerpt":"\\n<p>一个微服务方面的设计问题，是社交场景现在想渲染评论列表，每一个评论中有用户头像和昵称，但是评论表中只有用户 ID，每次获取评论列表时，需要 RPC 调用用户服务，获取对应的头像和昵称。我现在的解决方法有两个：一个是添加用户基本信息缓存，另外一个是在评论表中设置用户信息冗余字段（用户更改个人信息的时候很麻烦）。请问有没有别的解决方案呀？</p>\\n<p>答：两种方式都各有优缺点，在评论表中增加冗余信息相当于以空间换取时间的策略，不会频繁的进行rpc调用，因此效率比较高。增加基本信息缓存映射，需要定时去维护缓存中的用户信息，间接增大服务的开销，但是也是一种不错的思路。</p>\\n","autoDesc":true}')}}]);