"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[787],{6262:(e,t)=>{t.A=(e,t)=>{const r=e.__vccOpts||e;for(const[e,n]of t)r[e]=n;return r}},5250:(e,t,r)=>{r.r(t),r.d(t,{comp:()=>i,data:()=>a});var n=r(641);const o=[(0,n.Fv)('<h1 id="_1、为什么是mvc分层" tabindex="-1"><a class="header-anchor" href="#_1、为什么是mvc分层"><span>1、为什么是mvc分层</span></a></h1><h2 id="_1-1-引言" tabindex="-1"><a class="header-anchor" href="#_1-1-引言"><span>1.1 引言</span></a></h2><p>领域层包含<strong>聚合根、实体、值对象、领域服务</strong>等领域模型中的领域对象。</p><p>这里我要特别解释一下其中几个领域对象的关系，以便你在设计领域层的时候能更加清楚。首先，领域模型的业务逻辑主要是由实体和领域服务来实现的，其中实体会采用<strong>充血模型</strong>来实现所有与之相关的业务功能。其次，你要知道，实体和领域对象在实现业务逻辑上不是同级的，当领域中的某些功能，单一实体（或者值对象）不能实现时，领域服务就会出马，它可以组合聚合内的多个实体（或者值对象），实现复杂的业务逻辑。</p><p>领域层主要的服务形态有实体方法和领域服务。实体采用充血模型，在实体类内部实现实体相关的所有业务逻辑，实现的形式是实体类中的方法。实体是微服务的原子业务逻辑单元。在设计时我们主要考虑实体自身的属性和业务行为，实现领域模型的核心基础能力。不必过多考虑外部操作和业务流程，这样才能保证领域模型的稳定性。</p><ol><li>包含了业务核心的领域模型：实体（聚合根+值对象），使用充血模型实现所有与之相关的业务功能，主要表达业务概念，业务状态信息以及业务规则。</li><li>真正的业务逻辑都在领域层编写，聚合根负责封装实现业务逻辑，对应用层暴露领域级别的服务接口。</li><li>聚合根不能直接操作其它聚合根，聚合根与聚合根之间只能通过聚合根ID引用；同限界上下文内的聚合之间的领域服务可直接调用；两个限界上下文的交互必须通过应用服务层抽离接口-&gt;适配层适配。</li><li>跨实体的状态变化，使用领域服务，领域服务不能直接修改实体的状态，只能调用实体的业务方法</li></ol>',6)],c={},i=(0,r(6262).A)(c,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,o)}]]),a=JSON.parse('{"path":"/engineeringArchitectureDesign/second-mvcDesignArchitecture.html","title":"2、MVC软件分层模式","lang":"zh-CN","frontmatter":{"title":"2、MVC软件分层模式","icon":"file","order":2,"author":"bugcode","date":"2020-01-01T00:00:00.000Z","category":["分布式","架构"],"tag":["mvc","java"],"sticky":false,"star":true,"footer":"分布式","copyright":"bugcode","description":"1、为什么是mvc分层 1.1 引言 领域层包含聚合根、实体、值对象、领域服务等领域模型中的领域对象。 这里我要特别解释一下其中几个领域对象的关系，以便你在设计领域层的时候能更加清楚。首先，领域模型的业务逻辑主要是由实体和领域服务来实现的，其中实体会采用充血模型来实现所有与之相关的业务功能。其次，你要知道，实体和领域对象在实现业务逻辑上不是同级的，当领...","head":[["meta",{"property":"og:url","content":"https://www.bugcode.online/engineeringArchitectureDesign/second-mvcDesignArchitecture.html"}],["meta",{"property":"og:site_name","content":"bugcode 的架构之路"}],["meta",{"property":"og:title","content":"2、MVC软件分层模式"}],["meta",{"property":"og:description","content":"1、为什么是mvc分层 1.1 引言 领域层包含聚合根、实体、值对象、领域服务等领域模型中的领域对象。 这里我要特别解释一下其中几个领域对象的关系，以便你在设计领域层的时候能更加清楚。首先，领域模型的业务逻辑主要是由实体和领域服务来实现的，其中实体会采用充血模型来实现所有与之相关的业务功能。其次，你要知道，实体和领域对象在实现业务逻辑上不是同级的，当领..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-22T10:27:26.000Z"}],["meta",{"property":"article:author","content":"bugcode"}],["meta",{"property":"article:tag","content":"mvc"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-22T10:27:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2、MVC软件分层模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-22T10:27:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"bugcode\\"}]}"]]},"headers":[{"level":2,"title":"1.1 引言","slug":"_1-1-引言","link":"#_1-1-引言","children":[]}],"git":{"createdTime":1717338253000,"updatedTime":1729592846000,"contributors":[{"name":"不爱打代码的程序员","email":"2284609302@qq.com","commits":2}]},"readingTime":{"minutes":2.41,"words":724},"filePathRelative":"engineeringArchitectureDesign/second-mvcDesignArchitecture.md","localizedDate":"2020年1月1日","excerpt":"\\n<h2>1.1 引言</h2>\\n<p>领域层包含<strong>聚合根、实体、值对象、领域服务</strong>等领域模型中的领域对象。</p>\\n<p>这里我要特别解释一下其中几个领域对象的关系，以便你在设计领域层的时候能更加清楚。首先，领域模型的业务逻辑主要是由实体和领域服务来实现的，其中实体会采用<strong>充血模型</strong>来实现所有与之相关的业务功能。其次，你要知道，实体和领域对象在实现业务逻辑上不是同级的，当领域中的某些功能，单一实体（或者值对象）不能实现时，领域服务就会出马，它可以组合聚合内的多个实体（或者值对象），实现复杂的业务逻辑。</p>\\n<p>领域层主要的服务形态有实体方法和领域服务。实体采用充血模型，在实体类内部实现实体相关的所有业务逻辑，实现的形式是实体类中的方法。实体是微服务的原子业务逻辑单元。在设计时我们主要考虑实体自身的属性和业务行为，实现领域模型的核心基础能力。不必过多考虑外部操作和业务流程，这样才能保证领域模型的稳定性。</p>","autoDesc":true}')}}]);